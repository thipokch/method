import 'package:element/element_color.dart';
import 'package:flutter/material.dart';

const ColorScheme lightColorStyle = ColorScheme(
  brightness: Brightness.light,
  primary: ElementColor.mdSysColorPrimaryLight,
  onPrimary: ElementColor.mdSysColorOnPrimaryLight,
  primaryContainer: ElementColor.mdSysColorPrimaryContainerLight,
  onPrimaryContainer: ElementColor.mdSysColorOnPrimaryContainerLight,
  secondary: ElementColor.mdSysColorSecondaryLight,
  onSecondary: ElementColor.mdSysColorOnSecondaryLight,
  secondaryContainer: ElementColor.mdSysColorSecondaryContainerLight,
  onSecondaryContainer: ElementColor.mdSysColorOnSecondaryContainerLight,
  tertiary: ElementColor.mdSysColorTertiaryLight,
  onTertiary: ElementColor.mdSysColorOnTertiaryLight,
  tertiaryContainer: ElementColor.mdSysColorTertiaryContainerLight,
  onTertiaryContainer: ElementColor.mdSysColorOnTertiaryContainerLight,
  error: ElementColor.mdSysColorErrorLight,
  onError: ElementColor.mdSysColorOnErrorLight,
  errorContainer: ElementColor.mdSysColorErrorContainerLight,
  onErrorContainer: ElementColor.mdSysColorOnErrorContainerLight,
  outline: ElementColor.mdSysColorOutlineLight,
  background: ElementColor.mdSysColorBackgroundLight,
  onBackground: ElementColor.mdSysColorOnBackgroundLight,
  surface: ElementColor.mdSysColorSurfaceLight,
  onSurface: ElementColor.mdSysColorOnSurfaceLight,
  surfaceVariant: ElementColor.mdSysColorSurfaceVariantLight,
  onSurfaceVariant: ElementColor.mdSysColorOnSurfaceVariantLight,
  inversePrimary: ElementColor.mdSysColorInversePrimaryLight,
  inverseSurface: ElementColor.mdSysColorInverseSurfaceLight,
  onInverseSurface: ElementColor.mdSysColorInverseOnSurfaceLight,
  shadow: ElementColor.mdSysColorShadowLight,
  surfaceTint: ElementColor.mdSysColorSurfaceTintLight,
);

const ColorScheme darkColorStyle = ColorScheme(
  brightness: Brightness.dark,
  primary: ElementColor.mdSysColorPrimaryDark,
  onPrimary: ElementColor.mdSysColorOnPrimaryDark,
  primaryContainer: ElementColor.mdSysColorPrimaryContainerDark,
  onPrimaryContainer: ElementColor.mdSysColorOnPrimaryContainerDark,
  secondary: ElementColor.mdSysColorSecondaryDark,
  onSecondary: ElementColor.mdSysColorOnSecondaryDark,
  secondaryContainer: ElementColor.mdSysColorSecondaryContainerDark,
  onSecondaryContainer: ElementColor.mdSysColorOnSecondaryContainerDark,
  tertiary: ElementColor.mdSysColorTertiaryDark,
  onTertiary: ElementColor.mdSysColorOnTertiaryDark,
  tertiaryContainer: ElementColor.mdSysColorTertiaryContainerDark,
  onTertiaryContainer: ElementColor.mdSysColorOnTertiaryContainerDark,
  error: ElementColor.mdSysColorErrorDark,
  onError: ElementColor.mdSysColorOnErrorDark,
  errorContainer: ElementColor.mdSysColorErrorContainerDark,
  onErrorContainer: ElementColor.mdSysColorOnErrorContainerDark,
  outline: ElementColor.mdSysColorOutlineDark,
  background: ElementColor.mdSysColorBackgroundDark,
  onBackground: ElementColor.mdSysColorOnBackgroundDark,
  surface: ElementColor.mdSysColorSurfaceDark,
  onSurface: ElementColor.mdSysColorOnSurfaceDark,
  surfaceVariant: ElementColor.mdSysColorSurfaceVariantDark,
  onSurfaceVariant: ElementColor.mdSysColorOnSurfaceVariantDark,
  inversePrimary: ElementColor.mdSysColorInversePrimaryDark,
  inverseSurface: ElementColor.mdSysColorInverseSurfaceDark,
  onInverseSurface: ElementColor.mdSysColorInverseOnSurfaceDark,
  shadow: ElementColor.mdSysColorShadowDark,
  surfaceTint: ElementColor.mdSysColorSurfaceTintDark,
);
