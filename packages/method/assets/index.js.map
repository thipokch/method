{"version":3,"file":"index.js","mappings":"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","sources":["webpack://isar/./node_modules/detect-node/browser.js","webpack://isar/./node_modules/fast-deep-equal/index.js","webpack://isar/webpack/bootstrap","webpack://isar/webpack/runtime/compat get default export","webpack://isar/webpack/runtime/define property getters","webpack://isar/webpack/runtime/hasOwnProperty shorthand","webpack://isar/./src/bulk-delete.ts","webpack://isar/./src/schema.ts","webpack://isar/./src/watcher.ts","webpack://isar/./src/txn.ts","webpack://isar/./node_modules/broadcast-channel/dist/esbrowser/util.js","webpack://isar/./node_modules/broadcast-channel/dist/esbrowser/methods/native.js","webpack://isar/./node_modules/oblivious-set/dist/es/index.js","webpack://isar/./node_modules/broadcast-channel/dist/esbrowser/options.js","webpack://isar/./node_modules/broadcast-channel/dist/esbrowser/methods/indexed-db.js","webpack://isar/./node_modules/broadcast-channel/dist/esbrowser/methods/localstorage.js","webpack://isar/./node_modules/broadcast-channel/dist/esbrowser/methods/simulate.js","webpack://isar/./node_modules/broadcast-channel/dist/esbrowser/method-chooser.js","webpack://isar/./node_modules/broadcast-channel/dist/esbrowser/broadcast-channel.js","webpack://isar/./node_modules/unload/dist/es/browser.js","webpack://isar/./node_modules/unload/dist/es/index.js","webpack://isar/./src/instance.ts","webpack://isar/./src/link.ts","webpack://isar/./src/collection.ts","webpack://isar/./src/open.ts","webpack://isar/./src/cursor.ts","webpack://isar/./src/index.ts","webpack://isar/./src/query.ts"],"sourcesContent":["module.exports = false;\n\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { IsarTxn } from './txn'\n\nexport function bulkDelete(\n  txn: IsarTxn,\n  storeName: string,\n  keys: (IDBValidKey | IDBKeyRange)[],\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const len = keys.length\n    const lastItem = len - 1\n    if (len === 0) return resolve()\n    const store = txn.txn.objectStore(storeName)\n    for (let i = 0; i < keys.length; i++) {\n      const req = store.delete(keys[i])\n      req.onerror = () => {\n        txn.abort()\n        reject(req.error)\n      }\n      if (i === lastItem) {\n        req.onsuccess = () => {\n          resolve()\n        }\n      }\n    }\n  })\n}\n\nexport function bulkDeleteByIndex(\n  txn: IsarTxn,\n  storeName: string,\n  indexName: string,\n  keys: IDBValidKey[],\n): Promise<IDBValidKey[]> {\n  if (keys.length === 0) return Promise.resolve([])\n  return new Promise((resolve, reject) => {\n    const store = txn.txn.objectStore(storeName)\n    const index = store.index(indexName)\n\n    const primaryKeys: IDBValidKey[] = []\n    for (var i = 0; i < keys.length; i++) {\n      const indexReq = index.getAllKeys(keys[i])\n      const isLast = i === keys.length - 1\n      indexReq.onsuccess = () => {\n        primaryKeys.push(...indexReq.result)\n        if (isLast) {\n          bulkDelete(txn, storeName, primaryKeys).then(\n            () => resolve(primaryKeys),\n            reject,\n          )\n        }\n      }\n      indexReq.onerror = () => {\n        txn.abort()\n        reject(indexReq.error)\n      }\n    }\n  })\n}\n","import equal from 'fast-deep-equal'\n\nexport type Schema = {\n  name: string\n  properties: Array<PropertySchema>\n  indexes: Array<IndexSchema>\n  links: Array<LinkSchema>\n}\n\ntype PropertySchema = {\n  name: string\n  type: IsarType\n}\n\ntype IndexSchema = {\n  name: string\n  unique: boolean\n  properties: Array<IndexPropertySchema>\n}\n\ntype IndexPropertySchema = {\n  name: string\n  type: IndexType\n  caseSensitive: boolean\n}\n\nexport namespace IndexSchema {\n  export function isIndexMultiEntry(\n    schema: Schema,\n    indexSchema: IndexSchema,\n  ): boolean {\n    return indexSchema.properties.some(ip => {\n      const property = schema.properties.find(p => p.name === ip.name)!\n      return ip.type === IndexType.Value && IsarType.isList(property.type)\n    })\n  }\n\n  export function getKeyPath(indexSchema: IndexSchema): string | string[] {\n    return indexSchema.properties.length === 1\n      ? indexSchema.properties[0].name\n      : indexSchema.properties.map(p => p.name)\n  }\n\n  export function matchesIndex(\n    schema: Schema,\n    indexSchema: IndexSchema,\n    index: IDBIndex,\n  ): boolean {\n    return (\n      index.name === indexSchema.name &&\n      index.multiEntry === isIndexMultiEntry(schema, indexSchema) &&\n      index.unique === indexSchema.unique &&\n      equal(index.keyPath, getKeyPath(indexSchema))\n    )\n  }\n}\n\ntype LinkSchema = {\n  name: string\n  target: string\n}\n\nexport namespace LinkSchema {\n  export function getStoreName(\n    sourceName: string,\n    targetName: string,\n    linkName: string,\n  ): string {\n    return `_${sourceName}_${targetName}_${linkName}`\n  }\n}\n\nexport enum IsarType {\n  Bool = 'Bool',\n  Byte = 'Byte',\n  Int = 'Int',\n  Float = 'Float',\n  Long = 'Long',\n  Double = 'Double',\n  DateTime = 'DateTime',\n  String = 'String',\n  Object = 'Object',\n  BoolList = 'BoolList',\n  ByteList = 'ByteList',\n  IntList = 'IntList',\n  FloatList = 'FloatList',\n  LongList = 'LongList',\n  DoubleList = 'DoubleList',\n  DateTimeList = 'DateTimeList',\n  StringList = 'StringList',\n  ObjectList = 'ObjectList',\n}\n\nexport namespace IsarType {\n  export function isList(type: IsarType): boolean {\n    return type.endsWith('List')\n  }\n}\n\nenum IndexType {\n  Value = 'Value',\n  Hash = 'Hash',\n  HashElements = 'HashElements',\n}\n","import { IsarQuery } from './query'\nimport { IsarTxn } from './txn'\n\ntype ChangeCallback = () => void\n\ntype ObjectChangeCallback<OBJ> = (object?: OBJ) => void\n\ntype QueryChangeCallback<OBJ> = (results: OBJ[]) => void\n\ntype StopWatching = () => void\n\ntype QueryWatcher<OBJ> = {\n  callback: ChangeCallback | QueryChangeCallback<OBJ>\n  query: IsarQuery<OBJ>\n  lazy: boolean\n}\n\nexport type ChangeSet<OBJ> = {\n  cleared: boolean\n  addedObjects: Map<number, OBJ>\n  deletedObjectIds: Set<number>\n}\n\nexport class IsarChangeSet<OBJ> implements IsarChangeSet<OBJ> {\n  cleared: boolean = false\n  addedObjects: Map<number, OBJ> = new Map()\n  deletedObjectIds: Set<number> = new Set()\n\n  registerChange(id: number, idbObject?: OBJ) {\n    if (idbObject) {\n      this.addedObjects.set(id, idbObject)\n      this.deletedObjectIds.delete(id)\n    } else {\n      this.deletedObjectIds.add(id)\n      this.addedObjects.delete(id)\n    }\n  }\n\n  registerCleared() {\n    this.addedObjects.clear()\n    this.deletedObjectIds.clear()\n    this.cleared = true\n  }\n}\n\nexport class IsarWatchable<OBJ> {\n  readonly collectionWatchers = new Set<ChangeCallback>()\n  readonly objectWatchers: Map<number, Set<ObjectChangeCallback<OBJ>>> =\n    new Map()\n  readonly queryWatchers = new Set<QueryWatcher<OBJ>>()\n\n  watchLazy(callback: ChangeCallback): StopWatching {\n    this.collectionWatchers.add(callback)\n    return () => this.collectionWatchers.delete(callback)\n  }\n\n  watchObject(id: number, callback: ObjectChangeCallback<OBJ>): StopWatching {\n    let ow = this.objectWatchers.get(id)\n    if (ow == null) {\n      ow = new Set()\n      this.objectWatchers.set(id, ow)\n    }\n    ow.add(callback)\n    return () => {\n      if (ow!.size <= 1) {\n        this.objectWatchers.delete(id)\n      } else {\n        ow!.delete(callback)\n      }\n    }\n  }\n\n  private watchQueryInternal(\n    query: IsarQuery<OBJ>,\n    lazy: boolean,\n    callback: ChangeCallback | QueryChangeCallback<OBJ>,\n  ): StopWatching {\n    const watcher = { callback, query, lazy }\n    this.queryWatchers.add(watcher)\n    return () => this.queryWatchers.delete(watcher)\n  }\n\n  watchQuery(\n    query: IsarQuery<OBJ>,\n    callback: QueryChangeCallback<OBJ>,\n  ): StopWatching {\n    return this.watchQueryInternal(query, false, callback)\n  }\n\n  watchQueryLazy(\n    query: IsarQuery<OBJ>,\n    callback: ChangeCallback,\n  ): StopWatching {\n    return this.watchQueryInternal(query, true, callback)\n  }\n\n  notify(changes: ChangeSet<OBJ>, getTxn: () => IsarTxn) {\n    if (\n      !changes.cleared &&\n      changes.addedObjects.size === 0 &&\n      changes.deletedObjectIds.size === 0\n    ) {\n      return\n    }\n\n    function notifyQuery(watcher: QueryWatcher<OBJ>) {\n      if (watcher.lazy) {\n        ;(watcher.callback as ChangeCallback)()\n      } else {\n        const txn = getTxn()\n        watcher.query.findAll(txn).then(watcher.callback)\n      }\n    }\n\n    for (const watcher of this.collectionWatchers) {\n      watcher()\n    }\n\n    let queryWatchers: Set<QueryWatcher<OBJ>> | undefined\n    if (changes.cleared || changes.deletedObjectIds.size > 0) {\n      for (const watcher of this.queryWatchers) {\n        notifyQuery(watcher)\n      }\n    } else {\n      queryWatchers = new Set(this.queryWatchers)\n    }\n\n    if (changes.cleared) {\n      for (const [id, callbacks] of this.objectWatchers) {\n        for (let callback of callbacks) {\n          callback(changes.addedObjects.get(id))\n        }\n      }\n    } else {\n      for (const id of changes.deletedObjectIds) {\n        const callbacks = this.objectWatchers.get(id)\n        if (callbacks != null) {\n          for (let callback of callbacks) {\n            callback(undefined)\n          }\n        }\n      }\n\n      for (const [id, added] of changes.addedObjects) {\n        const ow = this.objectWatchers.get(id)\n        if (ow != null) {\n          for (let callback of ow) {\n            callback(added)\n          }\n        }\n\n        if (queryWatchers != null) {\n          for (const watcher of queryWatchers) {\n            if (watcher.query.whereClauseAndFilterMatch(id, added)) {\n              notifyQuery(watcher)\n              queryWatchers.delete(watcher)\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import { IsarInstance } from './instance'\nimport { IsarChangeSet } from './watcher'\n\nexport class IsarTxn {\n  readonly isar: IsarInstance\n  readonly txn: IDBTransaction\n  active: boolean\n  readonly write: boolean\n  private readonly changes: Map<string, IsarChangeSet<any>> | undefined\n\n  constructor(isar: IsarInstance, txn: IDBTransaction, write: boolean) {\n    this.isar = isar\n    this.txn = txn\n    this.active = true\n    this.write = write\n\n    if (write) {\n      this.changes = new Map()\n    }\n  }\n\n  getChangeSet<OBJ>(collectionName: string): IsarChangeSet<OBJ> {\n    let changeSet = this.changes!.get(collectionName)\n    if (changeSet == null) {\n      changeSet = new IsarChangeSet()\n      this.changes!.set(collectionName, changeSet)\n    }\n    return changeSet\n  }\n\n  commit(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.active = false\n\n      this.txn.oncomplete = () => {\n        if (this.changes) {\n          this.isar.notifyWatchers(this.changes)\n        }\n        resolve()\n      }\n      this.txn.onerror = () => {\n        reject(this.txn.error)\n      }\n      this.txn.commit()\n    })\n  }\n\n  abort() {\n    if (this.active) {\n      this.active = false\n      this.txn.abort()\n    }\n  }\n}\n","/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}","import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nvar ObliviousSet = /** @class */ (function () {\n    function ObliviousSet(ttl) {\n        this.ttl = ttl;\n        this.map = new Map();\n        /**\n         * Creating calls to setTimeout() is expensive,\n         * so we only do that if there is not timeout already open.\n         */\n        this._to = false;\n    }\n    ObliviousSet.prototype.has = function (value) {\n        return this.map.has(value);\n    };\n    ObliviousSet.prototype.add = function (value) {\n        var _this = this;\n        this.map.set(value, now());\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(function () {\n                _this._to = false;\n                removeTooOldValues(_this);\n            }, 0);\n        }\n    };\n    ObliviousSet.prototype.clear = function () {\n        this.map.clear();\n    };\n    return ObliviousSet;\n}());\nexport { ObliviousSet };\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(obliviousSet) {\n    var olderThen = now() - obliviousSet.ttl;\n    var iterator = obliviousSet.map[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        var next = iterator.next().value;\n        if (!next) {\n            return; // no more elements\n        }\n        var value = next[0];\n        var time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexport function now() {\n    return new Date().getTime();\n}\n//# sourceMappingURL=index.js.map","export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}","/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  var dbPromise = new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n  return dbPromise;\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n          return;\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parrallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined some times\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  var idb = getIdb();\n  if (!idb) {\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return 5;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","import NativeMethod from './methods/native.js';\nimport IndexeDbMethod from './methods/indexed-db.js';\nimport LocalstorageMethod from './methods/localstorage.js';\nimport SimulateMethod from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexeDbMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) throw new Error(\"No useable method found in \" + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}","import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsend message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was realy hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsend messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happend 'after' the listener\n         * was added, we also listen to events that happended 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // noone is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}","/* global WorkerGlobalScope */\nfunction add(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {// this is run inside of a webworker\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') return;\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n\n}\n\nexport default {\n  add: add\n};","import isNode from 'detect-node';\nimport BrowserMethod from './browser.js';\nimport NodeMethod from './node.js';\nvar USE_METHOD = isNode ? NodeMethod : BrowserMethod;\nvar LISTENERS = new Set();\nvar startedListening = false;\n\nfunction startListening() {\n  if (startedListening) return;\n  startedListening = true;\n  USE_METHOD.add(runAll);\n}\n\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') throw new Error('Listener is no function');\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}","import { IsarCollection } from './collection'\nimport { LinkSchema, Schema } from './schema'\nimport { IsarTxn } from './txn'\nimport { ChangeSet } from './watcher'\nimport { BroadcastChannel } from 'broadcast-channel'\n\nexport const idName = '_id';\n\nexport class IsarInstance {\n  private static readonly bc = new BroadcastChannel('ISAR_CHANNEL')\n\n  private readonly db: IDBDatabase\n  private readonly relaxedDurability: boolean\n  private collections: Map<string, IsarCollection<any>> = new Map()\n  private eventHandler: EventListener\n\n  constructor(db: IDBDatabase, relaxedDurability: boolean, schemas: Schema[]) {\n    this.db = db\n    this.relaxedDurability = relaxedDurability\n    this.initializeCollections(schemas)\n\n    this.eventHandler = (event: MessageEvent) => {\n      if (\n        event.data &&\n        event.data.type === 'change' &&\n        event.data.instance == this.db.name\n      ) {\n        this.notifyWatchers(event.data.changes, true)\n      }\n    }\n    IsarInstance.bc.addEventListener('message', this.eventHandler)\n  }\n\n  private initializeCollections(schemas: Schema[]) {\n    for (let schema of schemas) {\n      const backlinkStoreNames = schemas.flatMap(s => {\n        if (s.name === schema.name || s.links == undefined) {\n          return []\n        }\n        return s.links\n          .filter(l => l.target === schema.name)\n          .map(l => {\n            return LinkSchema.getStoreName(s.name, l.target, l.name)\n          })\n      })\n      const col = new IsarCollection(this, schema, backlinkStoreNames)\n      this.collections.set(schema.name, col)\n    }\n  }\n\n  notifyWatchers(\n    changes: Map<string, ChangeSet<any>>,\n    external: boolean = false,\n  ) {\n    let txn: IsarTxn | undefined\n\n    const getTxn = () => {\n      if (txn == null) {\n        txn = this.beginTxn(false)\n      }\n      return txn!\n    }\n    for (let [colName, changeSet] of changes.entries()) {\n      const collection = this.getCollection(colName)\n      collection.notify(changeSet, getTxn)\n    }\n\n    if (!external) {\n      const event: ChangeEvent = {\n        type: 'change',\n        instance: this.db.name,\n        changes,\n      }\n      IsarInstance.bc.postMessage(event)\n    }\n  }\n\n  beginTxn(write: boolean): IsarTxn {\n    const names = this.db.objectStoreNames\n    const mode = write ? 'readwrite' : 'readonly'\n    const options = this.relaxedDurability ? { durability: 'relaxed' } : {}\n    const txn = (this.db as any).transaction(names, mode, options)\n    return new IsarTxn(this, txn, write)\n  }\n\n  getCollection<OBJ>(name: string): IsarCollection<OBJ> {\n    return this.collections.get(name)!\n  }\n\n  close(deleteFromDisk: boolean = false): Promise<void> {\n    IsarInstance.bc.removeEventListener('message', this.eventHandler)\n    this.db.close()\n    if (deleteFromDisk) {\n      const req = indexedDB.deleteDatabase(this.db.name)\n      return new Promise((resolve, reject) => {\n        req.onsuccess = () => {\n          resolve()\n        }\n        req.onerror = () => {\n          reject(req.error)\n        }\n      })\n    } else {\n      return Promise.resolve()\n    }\n  }\n}\n\ntype ChangeEvent = {\n  type: 'change'\n  instance: string\n  changes: Map<string, ChangeSet<any>>\n}\n","import { bulkDelete } from './bulk-delete'\nimport { IsarInstance } from './instance'\nimport { LinkSchema } from './schema'\nimport { IsarTxn } from './txn'\n\nexport class IsarLink {\n  static readonly BacklinkIndex = 'backlink'\n\n  readonly isar: IsarInstance\n  readonly name: string\n  readonly sourceName: string\n  readonly targetName: string\n  readonly storeName: string\n\n  constructor(\n    isar: IsarInstance,\n    name: string,\n    sourceName: string,\n    targetName: string,\n  ) {\n    this.isar = isar\n    this.name = name\n    this.sourceName = sourceName\n    this.targetName = targetName\n    this.storeName = LinkSchema.getStoreName(sourceName, targetName, name)\n  }\n\n  private getLinkEntry(source: number, target: number, backlink: boolean): any {\n    if (backlink) {\n      ;[source, target] = [target, source]\n    }\n    return {\n      a: source,\n      b: target,\n    }\n  }\n\n  static getLinkKeyRange(id: number): IDBKeyRange {\n    return IDBKeyRange.bound([id, -Infinity], [id, Infinity])\n  }\n\n  update(\n    txn: IsarTxn,\n    backlink: boolean,\n    id: number,\n    addedTargets: number[],\n    deletedTargets: number[],\n  ): Promise<void> {\n    if (addedTargets.length === 0 && deletedTargets.length === 0) {\n      return Promise.resolve()\n    }\n\n    return new Promise((resolve, reject) => {\n      const store = txn.txn.objectStore(this.storeName)\n\n      const deletedEmpty = deletedTargets.length === 0\n      for (let i = 0; i < addedTargets.length; i++) {\n        let target = addedTargets[i]\n        const req = store.add(this.getLinkEntry(id, target, backlink))\n        if (deletedEmpty && i === addedTargets.length - 1) {\n          req.onsuccess = () => {\n            resolve()\n          }\n        }\n        req.onerror = () => {\n          txn.abort()\n          reject(req.error)\n        }\n      }\n\n      for (let i = 0; i < deletedTargets.length; i++) {\n        let target = deletedTargets[i]\n        const key = backlink ? [target, id] : [id, target]\n        const req = store.delete(key)\n        if (i === deletedTargets.length - 1) {\n          req.onsuccess = () => {\n            resolve()\n          }\n        }\n        req.onerror = () => {\n          txn.abort()\n          reject(req.error)\n        }\n      }\n    })\n  }\n\n  clear(txn: IsarTxn, id: number, backlink: boolean): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const store = txn.txn.objectStore(this.storeName)\n      if (backlink) {\n        const keysRes = store.index(IsarLink.BacklinkIndex).getAllKeys(id)\n        keysRes.onsuccess = () => {\n          const keys = keysRes.result\n          if (keys.length > 0) {\n            const ids = keys.map(key => (key as number[])[1])\n            bulkDelete(txn, this.storeName, ids).then(resolve, reject)\n          } else {\n            resolve()\n          }\n        }\n        keysRes.onerror = () => {\n          txn.abort()\n          reject(keysRes.error)\n        }\n      } else {\n        const deleteReq = store.delete(IsarLink.getLinkKeyRange(id))\n        deleteReq.onsuccess = () => {\n          resolve()\n        }\n        deleteReq.onerror = () => {\n          txn.abort()\n          reject(deleteReq.error)\n        }\n      }\n    })\n  }\n}\n","import { bulkDelete, bulkDeleteByIndex } from './bulk-delete'\nimport { idName, IsarInstance } from './instance'\nimport { IsarLink } from './link'\nimport { IndexSchema, IsarType, Schema } from './schema'\nimport { IsarTxn } from './txn'\nimport { IsarWatchable } from './watcher'\n\ninterface UniqueIndex {\n  readonly name: string\n  readonly accessors: string[]\n}\n\nexport type IndexKey = string | number | IndexKey[]\n\nexport class IsarCollection<OBJ> extends IsarWatchable<OBJ> {\n  readonly isar: IsarInstance\n  readonly name: string\n  private readonly uniqueIndexes: ReadonlyArray<UniqueIndex>\n  private readonly links: ReadonlyArray<IsarLink>\n  // only backlinks that don't target this collection\n  private readonly backlinkStoreNames: ReadonlyArray<string>\n  private readonly multiEntryIndexes: string[]\n  private readonly indexKeyPaths = new Map<string, string[]>()\n\n  constructor(\n    isar: IsarInstance,\n    schema: Schema,\n    backlinkStoreNames: string[],\n  ) {\n    super()\n    this.isar = isar\n    this.name = schema.name\n    this.uniqueIndexes = schema.indexes != undefined ? schema.indexes\n      .filter(i => i.unique)\n      .map(i => ({\n        name: i.name,\n        accessors: i.properties.map(p => p.name),\n      })) : []\n    this.links = schema.links != undefined ? schema.links.map(\n      l => new IsarLink(isar, l.name, schema.name, l.target),\n    ) : []\n    this.backlinkStoreNames = backlinkStoreNames\n    this.multiEntryIndexes = schema.indexes != undefined ? schema.indexes\n      .filter(i => IndexSchema.isIndexMultiEntry(schema, i))\n      .map(i => i.name) : []\n    this.indexKeyPaths = new Map(\n      schema.indexes != undefined ? schema.indexes.map(i => [i.name, i.properties.map(p => p.name)]) : [],\n    )\n  }\n\n  getLink(name: string): IsarLink | undefined {\n    return this.links.find(l => l.name === name)\n  }\n\n  getIndexKeyPath(indexName: string): string[] {\n    return this.indexKeyPaths.get(indexName)!\n  }\n\n  isMultiEntryIndex(indexName: string): boolean {\n    return this.multiEntryIndexes.includes(indexName)\n  }\n\n  get(txn: IsarTxn, id: number): Promise<OBJ | undefined> {\n    let store = txn.txn.objectStore(this.name)\n    return new Promise((resolve, reject) => {\n      let req = store.get(id)\n      req.onsuccess = () => {\n        const object = req.result\n        if (object) {\n          object[idName] = id\n        }\n        resolve(object)\n      }\n      req.onerror = () => {\n        reject(req.error)\n      }\n    })\n  }\n\n  getAll(txn: IsarTxn, ids: number[]): Promise<(OBJ | undefined)[]> {\n    return new Promise((resolve, reject) => {\n      const store = txn.txn.objectStore(this.name)\n      const results: (OBJ | undefined)[] = []\n      for (let i = 0; i < ids.length; i++) {\n        const id = ids[i]\n        const req = store.get(id)\n        req.onsuccess = () => {\n          const object = req.result\n          if (object) {\n            object[idName] = id\n          }\n          results.push(object)\n          if (results.length == ids.length) {\n            resolve(results)\n          }\n        }\n        req.onerror = () => {\n          reject(req.error)\n        }\n      }\n    })\n  }\n\n  getAllByIndex(\n    txn: IsarTxn,\n    indexName: string,\n    keys: IndexKey[],\n  ): Promise<(OBJ | undefined)[]> {\n    if (keys.length === 0) {\n      return Promise.resolve([])\n    }\n\n    keys.sort(indexedDB.cmp)\n    return new Promise((resolve, reject) => {\n      const store = txn.txn.objectStore(this.name)\n      const results: (OBJ | undefined)[] = []\n      const cursorReq = store.index(indexName).openCursor()\n      cursorReq.onsuccess = () => {\n        const cursor = cursorReq.result\n        if (cursor) {\n          const object = cursor.value\n          if (results.length > 0 || cursor.key === keys[0]) {\n            if (object) {\n              object[idName] = cursor.primaryKey\n              results.push(object)\n            } else {\n              results.push(undefined)\n            }\n          }\n          if (results.length == keys.length) {\n            resolve(results)\n          } else {\n            cursor.continue(keys[results.length])\n          }\n        } else {\n          resolve([])\n        }\n      }\n      cursorReq.onerror = e => {\n        reject(e)\n      }\n    })\n  }\n\n  putAll(txn: IsarTxn, objects: OBJ[]): Promise<number[]> {\n    let store = txn.txn.objectStore(this.name)\n    return new Promise((resolve, reject) => {\n      const ids: (number | undefined)[] = []\n      const changeSet = txn.getChangeSet(this.name)\n      for (let i = 0; i < objects.length; i++) {\n        const object = objects[i] as any\n        const id = object[idName]\n\n        const req = store.put(object)\n        delete object[idName]\n\n        ids.push(id)\n        if (!id) {\n          req.onsuccess = () => {\n            const id = req.result as number\n            ids[i] = id\n            changeSet.registerChange(id, object)\n            if (i === objects.length - 1) {\n              resolve(ids as number[])\n            }\n          }\n        } else {\n          changeSet.registerChange(id, object)\n          if (i === objects.length - 1) {\n            req.onsuccess = () => {\n              resolve(ids as number[])\n            }\n          }\n        }\n        req.onerror = () => {\n          txn.abort()\n          reject(req.error)\n        }\n      }\n    })\n  }\n\n  private deleteLinks(txn: IsarTxn, keys: IDBValidKey[]): Promise<void> {\n    if (this.links.length === 0 && this.backlinkStoreNames.length === 0) {\n      return Promise.resolve()\n    }\n    const linkPromises = this.links.map(l => {\n      return bulkDelete(txn, l.storeName, keys.map(IsarLink.getLinkKeyRange))\n    })\n    const backlinkPromises = this.backlinkStoreNames.map(storeName => {\n      return bulkDeleteByIndex(txn, storeName, IsarLink.BacklinkIndex, keys)\n    })\n    return Promise.all([...linkPromises, ...backlinkPromises]).then(() => { })\n  }\n\n  deleteAll(txn: IsarTxn, ids: number[]): Promise<void> {\n    return bulkDelete(txn, this.name, ids).then(() => {\n      const changeSet = txn.getChangeSet(this.name)\n      for (let id of ids) {\n        changeSet.registerChange(id)\n      }\n      return this.deleteLinks(txn, ids)\n    })\n  }\n\n  deleteAllByIndex(\n    txn: IsarTxn,\n    indexName: string,\n    keys: IndexKey[],\n  ): Promise<number> {\n    return bulkDeleteByIndex(txn, this.name, indexName, keys).then(ids => {\n      const changeSet = txn.getChangeSet(this.name)\n      for (let id of ids as number[]) {\n        changeSet.registerChange(id)\n      }\n      return this.deleteLinks(txn, ids).then(() => ids.length)\n    })\n  }\n\n  clear(txn: IsarTxn): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const storeNames = [\n        this.name,\n        ...this.backlinkStoreNames,\n        ...this.links.map(l => l.storeName),\n      ]\n      for (let i = 0; i < storeNames.length; i++) {\n        const store = txn.txn.objectStore(this.name)\n        const req = store.clear()\n        req.onerror = () => {\n          reject(req.error)\n        }\n        if (i === storeNames.length - 1) {\n          req.onsuccess = () => {\n            txn.getChangeSet(this.name).registerCleared()\n            resolve()\n          }\n        }\n      }\n    })\n  }\n}\n","import equal from 'fast-deep-equal'\nimport { IsarInstance } from './instance'\nimport { IsarLink } from './link'\nimport { IndexSchema, IsarType, LinkSchema, Schema } from './schema'\n\n// Polyfill for older browsers\nif (typeof IDBTransaction.prototype.commit !== \"function\") {\n  IDBTransaction.prototype.commit = function () { }\n}\n\nexport function openIsar(\n  name: string,\n  schemas: Schema[],\n  relaxedDurability: boolean,\n): Promise<IsarInstance> {\n  return openInternal(name, schemas, relaxedDurability)\n}\n\nfunction openInternal(\n  name: string,\n  schemas: Schema[],\n  relaxedDurability: boolean,\n  version?: number,\n): Promise<IsarInstance> {\n  return new Promise((resolve, reject) => {\n    const req = indexedDB.open(name, version)\n    req.onsuccess = () => {\n      const db = req.result\n      if (version == null) {\n        const txn = db.transaction(db.objectStoreNames, 'readonly')\n        if (!performUpgrade(txn, true, schemas)) {\n          const newVersion = txn.db.version + 1\n          db.close()\n          resolve(openInternal(name, schemas, relaxedDurability, newVersion))\n          return\n        }\n      }\n\n      const instance = new IsarInstance(db, relaxedDurability, schemas)\n      resolve(instance)\n    }\n    req.onupgradeneeded = () => {\n      performUpgrade(req.transaction!, false, schemas)\n    }\n    req.onerror = () => {\n      reject(req.error)\n    }\n  })\n}\n\nfunction performUpgrade(\n  txn: IDBTransaction,\n  dryRun: boolean,\n  schemas: Schema[],\n): boolean {\n  const schemaStoreNames: string[] = []\n  for (const schema of schemas) {\n    schemaStoreNames.push(schema.name)\n    const schemaIndexNames: string[] = []\n\n    let store: IDBObjectStore\n    if (!txn.objectStoreNames.contains(schema.name)) {\n      if (dryRun) {\n        return false\n      }\n      store = txn.db.createObjectStore(schema.name, {\n        autoIncrement: true,\n      })\n    } else {\n      store = txn.objectStore(schema.name)\n    }\n\n    console.log(\"HELLO\")\n    console.log(schema)\n\n    if (schema.indexes != undefined) {\n      for (let indexSchema of schema.indexes) {\n        schemaIndexNames.push(indexSchema.name)\n        if (store.indexNames.contains(indexSchema.name)) {\n          const index = store.index(indexSchema.name)\n          if (IndexSchema.matchesIndex(schema, indexSchema, index)) {\n            continue\n          } else {\n            if (!dryRun) {\n              store.deleteIndex(indexSchema.name)\n            }\n          }\n        }\n        if (dryRun) {\n          return false\n        }\n        store.createIndex(indexSchema.name, IndexSchema.getKeyPath(indexSchema), {\n          unique: indexSchema.unique,\n          multiEntry: IndexSchema.isIndexMultiEntry(schema, indexSchema),\n        })\n      }\n    }\n\n    if (schema.links != undefined) {\n      for (let linkSchema of schema.links) {\n        const name = LinkSchema.getStoreName(\n          schema.name,\n          linkSchema.target,\n          linkSchema.name,\n        )\n        let linkStore: IDBObjectStore\n        if (!txn.objectStoreNames.contains(name)) {\n          if (dryRun) {\n            return false\n          }\n          linkStore = txn.db.createObjectStore(name, {\n            keyPath: ['a', 'b'],\n            autoIncrement: false,\n          })\n        } else {\n          linkStore = txn.objectStore(name)\n        }\n        schemaStoreNames.push(name)\n\n        const indexesOk = equal(\n          [...linkStore.indexNames],\n          [IsarLink.BacklinkIndex],\n        )\n        if (!indexesOk) {\n          if (dryRun) {\n            return false\n          }\n          for (let indexName of linkStore.indexNames) {\n            linkStore.deleteIndex(indexName)\n          }\n          linkStore.createIndex(IsarLink.BacklinkIndex, 'b')\n        }\n      }\n    }\n    \n    for (let indexName of store.indexNames) {\n      if (schemaIndexNames.indexOf(indexName) === -1) {\n        if (dryRun) {\n          return false\n        }\n        store.deleteIndex(indexName)\n      }\n    }\n  }\n\n  for (let storeName of txn.objectStoreNames) {\n    if (schemaStoreNames.indexOf(storeName) === -1) {\n      if (dryRun) {\n        return false\n      }\n      txn.db.deleteObjectStore(storeName)\n    }\n  }\n\n  return true\n}\n\ntype CollectionInfo = {\n  properties: {\n    [key: string]: CollectionProperty\n  }\n  nextId: number\n}\n\ntype CollectionProperty = {\n  id: number\n  type: IsarType\n}","import { IsarTxn } from './txn'\n\ntype CursorParams = {\n  txn: IsarTxn\n  callback: CursorCallback\n  storeName: string\n  indexName?: string\n  range?: IDBKeyRange\n  offset?: number\n  direction?: IDBCursorDirection\n}\n\ntype CursorCallback = (\n  id: any,\n  value: any,\n  next: Function,\n  resolve: Function,\n  reject: Function,\n) => void\n\nexport function useCursor(params: CursorParams): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const store = params.txn.txn.objectStore(params.storeName)\n    const source =\n      params.indexName != null ? store.index(params.indexName) : store\n    const multiEntry = params.indexName && (source as IDBIndex).multiEntry\n\n    const cursorReq = source.openCursor(params.range, params.direction)\n    cursorReq.onsuccess = () => {\n      const cursor = cursorReq.result\n      if (cursor) {\n        if (params.offset) {\n          cursor.advance(params.offset)\n          params.offset = undefined\n        } else {\n          if (multiEntry) {\n            const isArray = Array.isArray(\n              cursor.value[source.keyPath as string],\n            )\n            if (!isArray) {\n              cursor.continue()\n              return\n            }\n          }\n          params.callback(\n            cursor.primaryKey,\n            cursor.value,\n            function () {\n              cursor.continue()\n            },\n            resolve,\n            reject,\n          )\n        }\n      } else {\n        resolve()\n      }\n    }\n    cursorReq.onerror = e => {\n      reject(e)\n    }\n  })\n}\n","import { IsarCollection } from './collection'\nimport { IsarInstance } from './instance'\nimport { IsarLink } from './link'\nimport { openIsar } from './open'\nimport { IsarQuery } from './query'\nimport { IsarTxn } from './txn'\n\n;(window as any).openIsar = openIsar\n;(window as any).IsarInstance = IsarInstance\n;(window as any).IsarTxn = IsarTxn\n;(window as any).IsarCollection = IsarCollection\n;(window as any).IsarQuery = IsarQuery\n;(window as any).IsarLink = IsarLink\n","import { IsarCollection } from './collection'\nimport { useCursor } from './cursor'\nimport { idName } from './instance'\nimport { IsarLink } from './link'\nimport { IsarTxn } from './txn'\n\ntype IdWherClause = {\n  range?: IDBKeyRange\n}\n\ntype IndexWherClause = {\n  indexName: string\n  range?: IDBKeyRange\n}\n\ntype LinkWherClause = {\n  linkCollection: string\n  linkName: string\n  backlink: boolean\n  id: number\n}\n\ntype WherClause = IdWherClause | IndexWherClause | LinkWherClause\n\ntype Filter = (id: number, obj: any) => boolean\n\ntype Cmp = (a: any, b: any) => number\n\ntype DistinctValue = (obj: any) => string\n\nexport class IsarQuery<OBJ> {\n  collection: IsarCollection<OBJ>\n  whereClauses: WherClause[]\n  whereClauseDirection: IDBCursorDirection\n  filter?: Filter\n  sortCmp?: Cmp\n  distinctValue?: DistinctValue\n  offset: number\n  limit: number\n\n  constructor(\n    collection: IsarCollection<OBJ>,\n    whereClauses: WherClause[],\n    whereDistinct: boolean,\n    whereAscending: boolean,\n    filter?: Filter,\n    sortCmp?: Cmp,\n    distinctValue?: DistinctValue,\n    offset?: number,\n    limit?: number,\n  ) {\n    this.collection = collection\n    this.whereClauses = whereClauses\n    this.filter = filter\n    this.sortCmp = sortCmp\n    this.distinctValue = distinctValue\n    this.offset = offset ?? 0\n    this.limit = limit ?? Infinity\n\n    if (whereDistinct) {\n      this.whereClauseDirection = whereAscending ? 'nextunique' : 'prevunique'\n    } else {\n      this.whereClauseDirection = whereAscending ? 'next' : 'prev'\n    }\n\n    if (this.whereClauses.length === 0) {\n      this.whereClauses.push({})\n    }\n  }\n\n  private getWhereClauseRange(\n    whereClause: IdWherClause | IndexWherClause,\n  ): IDBKeyRange {\n    return whereClause.range ?? IDBKeyRange.lowerBound(-Infinity)\n  }\n\n  private async findInternal(txn: IsarTxn, limit: number): Promise<any[]> {\n    const offset = this.offset\n    const unsortedLimit = !this.sortCmp ? offset + limit : Infinity\n    const unsortedDistinct = !this.sortCmp ? this.distinctValue : undefined\n    let results: OBJ[] = []\n    const idsSet = new Set<number>()\n    const distinctSet = new Set<String>()\n\n    const cursorCallback = (\n      id: any,\n      object: any,\n      next: Function,\n      resolve: Function,\n    ) => {\n      if (idsSet.has(id)) {\n        next()\n        return\n      } else {\n        idsSet.add(id)\n      }\n\n      if (this.filter) {\n        if (!this.filter(id, object)) {\n          next()\n          return\n        }\n      }\n      if (unsortedDistinct) {\n        const value = unsortedDistinct(object)\n        if (distinctSet.has(value)) {\n          next()\n          return\n        } else {\n          distinctSet.add(value)\n        }\n      }\n      object[idName] = id\n      results.push(object)\n      if (results.length < unsortedLimit) {\n        next()\n      } else {\n        resolve()\n      }\n    }\n\n    for (const whereClause of this.whereClauses) {\n      if (results.length >= unsortedLimit) {\n        break\n      }\n      if ('linkName' in whereClause) {\n        const link = this.collection.isar\n          .getCollection(whereClause.linkCollection)\n          .getLink(whereClause.linkName)!\n        await useCursor({\n          txn,\n          storeName: link.storeName,\n          indexName: whereClause.backlink ? IsarLink.BacklinkIndex : undefined,\n          range: IsarLink.getLinkKeyRange(whereClause.id),\n          direction: this.whereClauseDirection,\n          callback: (key, _, next, resolve, reject) => {\n            const id = (key as number[])[whereClause.backlink ? 0 : 1]\n            this.collection\n              .get(txn, id)\n              .then(obj => {\n                if (obj) {\n                  cursorCallback(id, obj, next, resolve)\n                } else {\n                  next()\n                }\n              })\n              .catch(() => reject())\n          },\n        })\n      } else {\n        const range = this.getWhereClauseRange(whereClause)\n        await useCursor({\n          txn,\n          storeName: this.collection.name,\n          indexName:\n            'indexName' in whereClause ? whereClause.indexName : undefined,\n          range: range,\n          direction: this.whereClauseDirection,\n          callback: cursorCallback,\n        })\n      }\n    }\n\n    if (this.sortCmp) {\n      results.sort(this.sortCmp)\n\n      const distinctValue = this.distinctValue\n      if (distinctValue) {\n        results = results.filter(obj => {\n          const value = distinctValue!(obj)\n          if (!distinctSet.has(value)) {\n            distinctSet.add(value)\n            return true\n          } else {\n            return false\n          }\n        })\n      }\n    }\n\n    return results.slice(offset, offset + limit)\n  }\n\n  findFirst(txn: IsarTxn): Promise<OBJ | undefined> {\n    return this.findInternal(txn, 1).then(results => {\n      return results.length > 0 ? results[0] : undefined\n    })\n  }\n\n  findAll(txn: IsarTxn): Promise<OBJ[]> {\n    return this.findInternal(txn, this.limit ?? Infinity)\n  }\n\n  deleteFirst(txn: IsarTxn): Promise<boolean> {\n    return this.findInternal(txn, 1).then(result => {\n      if (result.length !== 0) {\n        return this.collection\n          .deleteAll(txn, [result[0][idName]])\n          .then(() => true)\n      } else {\n        return false\n      }\n    })\n  }\n\n  deleteAll(txn: IsarTxn): Promise<number> {\n    return this.findInternal(txn, this.limit).then(result => {\n      return this.collection\n        .deleteAll(txn, result.map(obj => obj[idName]))\n        .then(() => result.length)\n    })\n  }\n\n  min(txn: IsarTxn, key: string): Promise<number | undefined> {\n    return this.findAll(txn).then(results => {\n      let min: number | undefined = undefined\n      for (const obj of results) {\n        const value = (obj as any)[key]\n        if (value != null && (min == null || value < min)) {\n          min = value\n        }\n      }\n      return min\n    })\n  }\n\n  max(txn: IsarTxn, key: string): Promise<number | undefined> {\n    return this.findAll(txn).then(results => {\n      let max: number | undefined = undefined\n      for (const obj of results) {\n        const value = (obj as any)[key]\n        if (value != null && (max == null || value > max)) {\n          max = value\n        }\n      }\n      return max\n    })\n  }\n\n  sum(txn: IsarTxn, key: string): Promise<number> {\n    return this.findAll(txn).then(results => {\n      let sum = 0\n      for (const obj of results) {\n        const value = (obj as any)[key]\n        if (value != null) {\n          sum += value\n        }\n      }\n      return sum\n    })\n  }\n\n  average(txn: IsarTxn, key: string): Promise<number> {\n    return this.findAll(txn).then(results => {\n      let sum = 0\n      let count = 0\n      for (const obj of results) {\n        const value = (obj as any)[key]\n        if (value != null) {\n          sum += value\n          count++\n        }\n      }\n      return sum / count\n    })\n  }\n\n  count(txn: IsarTxn): Promise<number> {\n    return this.findAll(txn).then(result => result.length)\n  }\n\n  private whereClauseMatches(id: number, object: OBJ) {\n    for (const whereClause of this.whereClauses) {\n      if ('linkName' in whereClause) {\n        return true\n      } else if ('indexName' in whereClause) {\n        if (this.collection.isMultiEntryIndex(whereClause.indexName)) {\n          const values = (object as any)[\n            this.collection.getIndexKeyPath(whereClause.indexName!)[0]\n          ]\n          for (let value of values) {\n            if (this.getWhereClauseRange(whereClause).includes(value)) {\n              return true\n            }\n          }\n        } else {\n          let value = this.collection\n            .getIndexKeyPath(whereClause.indexName!)\n            .map(p =>\n              p === this.collection.name ? id : (object as any)[p],\n            )\n          if (value.length === 1) {\n            value = value[0]\n          }\n          if (this.getWhereClauseRange(whereClause).includes(value)) {\n            return true\n          }\n        }\n      } else if (this.getWhereClauseRange(whereClause).includes(id)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  whereClauseAndFilterMatch(id: number, idbObject: OBJ): boolean {\n    if (!this.whereClauseMatches(id, idbObject)) {\n      return false\n    }\n\n    if (this.filter) {\n      if (!this.filter(id, idbObject)) {\n        return false\n      }\n    }\n\n    return true\n  }\n}\n"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","bulkDelete","txn","storeName","Promise","resolve","reject","len","lastItem","store","objectStore","req","delete","onerror","abort","error","onsuccess","bulkDeleteByIndex","indexName","index","primaryKeys","indexReq","getAllKeys","isLast","push","result","then","IndexSchema","LinkSchema","IsarType","IndexType","isIndexMultiEntry","schema","indexSchema","properties","some","ip","property","find","p","name","type","Value","isList","getKeyPath","map","matchesIndex","multiEntry","unique","keyPath","getStoreName","sourceName","targetName","linkName","endsWith","IsarChangeSet","cleared","addedObjects","Map","deletedObjectIds","Set","registerChange","id","idbObject","this","set","add","registerCleared","clear","IsarWatchable","collectionWatchers","objectWatchers","queryWatchers","watchLazy","callback","watchObject","ow","size","watchQueryInternal","query","lazy","watcher","watchQuery","watchQueryLazy","notify","changes","getTxn","notifyQuery","findAll","callbacks","added","whereClauseAndFilterMatch","IsarTxn","isar","write","active","getChangeSet","collectionName","changeSet","commit","oncomplete","notifyWatchers","PROMISE_RESOLVED_VOID","sleep","time","resolveWith","res","setTimeout","randomToken","Math","random","substring","lastMs","additional","microSeconds","ms","Date","getTime","create","channelName","state","messagesCallback","bc","BroadcastChannel","subFns","onmessage","msg","data","close","channelState","onMessage","fn","postMessage","messageJson","err","canBeUsed","window","_pubkey","Error","averageResponseTime","ObliviousSet","ttl","_to","has","value","_this","now","obliviousSet","olderThen","iterator","Symbol","next","removeTooOldValues","originalOptions","arguments","options","JSON","parse","stringify","webWorkerSupport","idb","fallbackInterval","onclose","localstorage","removeTimeout","methods","node","maxParallelWrites","useFastPath","OBJECT_STORE_ID","TRANSACTION_SETTINGS","durability","getIdb","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","commitIndexedDBTransaction","tx","_readLoop","closed","readNewMessages","db","lastCursorId","transaction","ret","keyRangeValue","IDBKeyRange","bound","Infinity","getAll","getAllRequest","rej","e","target","openCursorRequest","openCursor","ev","cursor","getMessagesHigherThan","newerMessages","useMessages","filter","msgObj","uuid","eMIs","messagesCallbackTime","_filterMessage","sort","msgObjA","msgObjB","forEach","dbName","openRequest","open","onupgradeneeded","createObjectStore","autoIncrement","createDatabase","writeBlockPromise","readQueuePromises","readerUuid","writeObject","writeMessage","floor","msgObk","tooOld","ids","all","deleteRequest","removeMessagesById","cleanOldMessages","getLocalStorage","localStorage","storageKey","ls","setItem","removeItem","listener","newValue","token","addEventListener","addStorageEventListener","removeEventListener","writeObj","document","createEvent","initEvent","dispatchEvent","userAgent","navigator","toLowerCase","includes","defaultTime","SIMULATE_CHANNELS","from","channel","METHODS","OPEN_BROADCAST_CHANNELS","lastId","maybePromise","method","chooseMethods","concat","Boolean","m","useMethod","_iL","_onML","_addEL","message","internal","_uMP","_befC","_prepP","s","_state","_post","broadcastChannel","sendPromise","_hasMessageListeners","_addListenerObject","listenerFn","listenerObject","minMessageTime","_startListening","_removeListenerObject","_stopListening","postInternal","listenObj","awaitPrepare","isClosed","WorkerGlobalScope","self","idName","IsarInstance","relaxedDurability","schemas","collections","initializeCollections","eventHandler","event","instance","backlinkStoreNames","flatMap","links","l","col","IsarCollection","external","beginTxn","colName","entries","getCollection","names","objectStoreNames","mode","deleteFromDisk","deleteDatabase","IsarLink","getLinkEntry","backlink","static","update","addedTargets","deletedTargets","deletedEmpty","keysRes","BacklinkIndex","deleteReq","getLinkKeyRange","super","indexKeyPaths","uniqueIndexes","indexes","accessors","multiEntryIndexes","getLink","getIndexKeyPath","isMultiEntryIndex","object","results","getAllByIndex","cmp","cursorReq","primaryKey","continue","putAll","objects","put","deleteLinks","linkPromises","backlinkPromises","deleteAll","deleteAllByIndex","storeNames","openInternal","version","performUpgrade","newVersion","dryRun","schemaStoreNames","schemaIndexNames","contains","console","log","indexNames","deleteIndex","createIndex","linkSchema","linkStore","indexOf","deleteObjectStore","useCursor","params","range","direction","offset","advance","IDBTransaction","openIsar","IsarQuery","collection","whereClauses","whereDistinct","whereAscending","sortCmp","distinctValue","limit","whereClauseDirection","getWhereClauseRange","whereClause","lowerBound","async","unsortedLimit","unsortedDistinct","idsSet","distinctSet","cursorCallback","link","linkCollection","_","catch","slice","findFirst","findInternal","deleteFirst","min","max","sum","average","count","whereClauseMatches","values"],"sourceRoot":""}